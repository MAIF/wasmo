name: Build and deploy documentation

on:
  push:
    branches: ["*"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    working-directory: ./docs/documentation

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache-dependency-path: ./docs/documentation/yarn.lock
          cache: yarn
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            ./docs/documentation/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-
      - name: Install dependencies
        run: yarn install
      - name: Build with Next.js
        run: yarn run next build
      - name: Build documentation indexation 
        run: npx pagefind --site "out" --output-path "out/dist"
      - name: Debug - List output directory
        run: ls -la out/
      - name: Debug - Check if artifact path exists
        run: |
          echo "Checking artifact path:"
          ls -la ./docs/documentation/out/ || echo "Path does not exist"
          echo "Current working directory:"
          pwd
          echo "Repository root contents:"
          ls -la /home/runner/work/*/
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs/documentation/out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4